#!/usr/bin/env python3
import rospy
import cv2
from std_msgs.msg import UInt8MultiArray
import numpy as np


def main():
    rospy.init_node('view_depth_cam')
    if cv2.cuda.getCudaEnabledDeviceCount() > 0:
        rospy.loginfo("CV2 using GPU")
    else:
        rospy.logwarn("ERR: CV2 NOT USING GPU!")

        
    print('Running...')
    while not rospy.is_shutdown():
        frame_buffer = rospy.wait_for_message("/rgb_image", UInt8MultiArray, timeout=None)
        frame_height = frame_buffer.layout.dim[0].size
        frame_width = frame_buffer.layout.dim[1].size
       
        #try:
        frame_channels = frame_buffer.layout.dim[2].size
        #except:
         #   frame_channels =1
    
        np_frame = np.array(list(frame_buffer.data))
        frame = np.reshape(np_frame, (frame_height, frame_width, frame_channels)).astype(np.uint8)
        #frame = np.flip(frame, 0)
        #frame = np.flip(frame, 2)
        #bigger_frame = cv2.resize(frame, (1280, 720))
        cv2.imshow('Detection', frame)


        key = cv2.waitKey(1)
        if key == 27:
            break

    cv2.destroyAllWindows()


if __name__ == "__main__":
    main()




