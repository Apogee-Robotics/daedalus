#!/usr/bin/env python
import rospy
from std_msgs.msg import Empty
from std_srvs.srv import Trigger
from geometry_msgs.msg import Wrench
from geometry_msgs.msg import Point
from mujoco_ros.srv import ApplyForce
from mujoco_ros.srv import SetBody

import numpy as np
from time import sleep

# Currently only using 1 object, this will change as we move to more
OBJECT_ID = 1

rospy.wait_for_service('/mujoco/apply_force')
apply_force = rospy.ServiceProxy('/mujoco/apply_force', ApplyForce)
set_body = rospy.ServiceProxy('/mujoco/set_body', SetBody)
reset = rospy.ServiceProxy('/mujoco/reset', Trigger)


def reset_cb(msg):
    #reset()

    point = Point()
    point.x = np.random.uniform(low=-0.8, high=-0.7)
    point.y = np.random.uniform(low=0.25, high=0.35)
    point.z = np.random.uniform(low=0.015, high=0.25)
    set_body("ball", point)
    
    sleep(0.1)
    wrench = Wrench()
    wrench.force.x = np.random.uniform(low=0.75, high=1)
    wrench.force.y = np.random.uniform(low=-0.05, high=0.05)
    wrench.force.z = np.random.uniform(low=-0.1, high=0.1)
    wrench.torque.x = np.random.uniform(low=0.005, high=0.02)
    wrench.torque.y = np.random.uniform(low=0.0005, high=0.02)
    wrench.torque.z = np.random.uniform(low=0.005, high=0.02)
    apply_duration = 0.1
    apply_force(OBJECT_ID, wrench, apply_duration)

def main():
    rospy.init_node('reset_server')
    rospy.Subscriber("reset", Empty, reset_cb)
    rospy.loginfo("Running...")
    rospy.spin()


if __name__ == "__main__":
    main()